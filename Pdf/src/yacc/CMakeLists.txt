cmake_path(GET CMAKE_CURRENT_LIST_DIR STEM PROJ)
find_package(FLEX REQUIRED)
find_package(BISON REQUIRED)
find_package(jsoncpp REQUIRED)
set(FLEX_SOURCE pdf.lex)
set(BISON_SOURCE pdf.y)
cmake_path(REPLACE_EXTENSION FLEX_SOURCE l.cpp OUTPUT_VARIABLE FLEX_GENETATE_SOURCE)
cmake_path(REPLACE_EXTENSION FLEX_SOURCE l.h OUTPUT_VARIABLE FLEX_GENETATE_HEADER)
cmake_path(REPLACE_EXTENSION BISON_SOURCE y.cpp OUTPUT_VARIABLE BISON_GENETATE_SOURCE)

cmake_path(APPEND FLEX_GENETATE_SOURCE ${CMAKE_CURRENT_BINARY_DIR} ${FLEX_GENETATE_SOURCE})
cmake_path(APPEND FLEX_GENETATE_HEADER ${CMAKE_CURRENT_BINARY_DIR} ${FLEX_GENETATE_HEADER})
cmake_path(APPEND BISON_GENETATE_SOURCE ${CMAKE_CURRENT_BINARY_DIR} ${BISON_GENETATE_SOURCE})

FLEX_TARGET(${PROJ}_SCANNER ${FLEX_SOURCE} ${FLEX_GENETATE_SOURCE}
DEFINES_FILE ${FLEX_GENETATE_HEADER}
# COMPILE_FLAGS -d
)
BISON_TARGET(${PROJ}_PARSER ${BISON_SOURCE} ${BISON_GENETATE_SOURCE}
COMPILE_FLAGS "-t"
)
ADD_FLEX_BISON_DEPENDENCY(${PROJ}_SCANNER ${PROJ}_PARSER)
set(BISON_FLEX_HEADER ${FLEX_${PROJ}_SCANNER_OUTPUT_HEADER})
set(BISON_YACC_HEADER ${BISON_${PROJ}_PARSER_OUTPUT_HEADER})
cmake_path(GET BISON_FLEX_HEADER FILENAME BISON_FLEX_HEADER)
cmake_path(GET BISON_YACC_HEADER FILENAME BISON_YACC_HEADER)
configure_file(pdf.config.h.in pdf.config.h)
configure_file(pch.h.in pch.h)
include_directories(${CMAKE_CURRENT_LIST_DIR} ${CMAKE_CURRENT_BINARY_DIR})
# message(${BISON_${PROJ}_OUTPUT_HEADER})
# message(${FLEX_${PROJ}_OUTPUT_HEADER})

# message(${PROJ} ${FLEX_${PROJ}_SCANNER_OUTPUTS} ${BISON_${PROJ}_PARSER_OUTPUT_SOURCE})
add_executable(${PROJ} ${FLEX_${PROJ}_SCANNER_OUTPUTS} ${BISON_${PROJ}_PARSER_OUTPUT_SOURCE} main.cpp)
target_link_libraries(${PROJ} jsoncpp)